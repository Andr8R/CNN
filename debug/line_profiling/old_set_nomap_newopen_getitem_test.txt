Timer unit: 1e-06 s

Total time: 68.1769 s
File: debug/old_train_set.py
Function: __getitem__ at line 300

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   300                                               @profile
   301                                               def __getitem__(self, index):
   302                                                   '''
   303                                                   self.a = self.event_data[self.datasets[0]][index,:,:,:19]
   304                                                   #self.c = self.a[:,:,self.endcap_mPMT_order[:,1]]
   305                                                   #self.c[12:28,:,:] = self.a[12:28,:,:19]
   306                                                   self.c = self.a
   307                                                   return np.squeeze(self.chrg_func(np.expand_dims(np.ascontiguousarray(np.transpose(self.c,[2,0,1])), axis=0), self.chrg_acc, apply=True)), self.labels[self.datasets[0]][index], self.energies[self.datasets[0]][index], self.angles[self.datasets[0]][index], index, self.positions[self.datasets[0]][index]
   308                                                   '''
   309                                                   
   310     17768     126531.0      7.1      0.2          np.random.shuffle(self.datasets)
   311     17768      63847.0      3.6      0.1          for i in np.arange(len(self.datasets)):
   312                                           
   313     17768      38486.0      2.2      0.1              if index < self.labels[self.datasets[i]].shape[0]:
   314     17768   33595466.0   1890.8     49.3                  if self.event_data[self.datasets[i]][index, :, :, :19].shape[0] == 16:
   315                                           
   316                                                               self.a = self.event_data[self.datasets[i]][index, :, :, :19]
   317                                                               self.c = np.concatenate((self.b,self.a,self.b), axis=0)
   318                                                               self.e = np.random.rand(192,19,2)
   319                                                               prob = random.randrange(1, 7, 1)/100
   320                                                               self.f = self.e[:,:,0] > prob
   321                                                               self.g = np.where(self.f, 0, self.e[:,:,1])
   322                                                               self.c[self.d[:,0], self.d[:,1]] = self.g
   323                                           
   324                                                               return np.squeeze(self.chrg_func(np.expand_dims(np.ascontiguousarray(np.transpose(self.c,[2,0,1])),axis=0), self.chrg_acc, apply=True)), self.labels[self.datasets[i]][index], self.energies[self.datasets[i]][index], self.angles[self.datasets[i]][index], index, self.positions[self.datasets[i]][index]
   325                                           
   326                                                           else:
   327     17768   32822098.0   1847.3     48.1                      self.a = self.event_data[self.datasets[i]][index,:,:,:19]
   328     17767     139982.0      7.9      0.2                      self.b[12:28,:,:] = self.a[12:28, :, :]
   329     17767     309080.0     17.4      0.5                      self.b[self.new_cap_ind[:,0], self.new_cap_ind[:,1],:] = self.a[self.cap_ind[:,0], self.cap_ind[:,1]]
   330     17767      16340.0      0.9      0.0                      self.c = self.b
   331                                                               #self.c = self.a[:,:,self.endcap_mPMT_order[:,1]]
   332                                                               #self.c[12:28,:,:] = self.a[12:28,:,:19]
   333                                                               
   334     17767    1065079.0     59.9      1.6                      return np.squeeze(self.chrg_func(np.expand_dims(np.ascontiguousarray(np.transpose(self.c,[2,0,1])), axis=0), self.chrg_acc, apply=True)), self.labels[self.datasets[i]][index], self.energies[self.datasets[i]][index], self.angles[self.datasets[i]][index], index, self.positions[self.datasets[i]][index]
   335                                                   
   336                                                   assert False, "empty batch"
   337                                                   raise RuntimeError("empty batch")

Total time: 70.4777 s
File: debug/old_train_set.py
Function: run_test at line 351

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   351                                           @profile
   352                                           def run_test(args):
   353         1     378143.0 378143.0      0.5      train_dset = WCH5DatasetT(trainval_path, trainval_idxs, norm_params_path, chrg_norm, time_norm, shuffle=shuffle, num_datasets=num_datasets, trainval_subset=trainval_subset)
   354         1     491161.0 491161.0      0.7      train_indices = [i for i in range(len(train_dset))]
   355                                               
   356         1          7.0      7.0      0.0      if args.loader == 'notorch':
   357         1          7.0      7.0      0.0          for epoch in range(2):
   358         1          0.0      0.0      0.0              indices_left = train_indices
   359         1          1.0      1.0      0.0              i = 0
   360        35         56.0      1.6      0.0              while len(indices_left) > 0:
   361        35       5463.0    156.1      0.0                  batch_idxs = indices_left[0:512 if len(indices_left) >= 512 else len(indices_left)]
   362        35         50.0      1.4      0.0                  assert len(batch_idxs) == 512
   363        35   68468075.0 1956230.7     97.1                  data = fetch_batch(train_dset,batch_idxs)
   364        34         60.0      1.8      0.0                  assert data[0][0].shape == (19,40,40)
   365        34    1133580.0  33340.6      1.6                  indices_left = np.delete(indices_left, range(512 if len(indices_left) >= 512 else len(indices_left)))
   366        34       1039.0     30.6      0.0                  print("Epoch: {} Batch: {} ".format(epoch+1,i+1))
   367        34         39.0      1.1      0.0                  i+=1
   368                                           
   369                                               else:
   370                                                   train_loader = DataLoader(train_dset, batch_size=512, shuffle=False,
   371                                                                                   pin_memory=False, sampler=SubsetRandomSampler(train_indices), num_workers=5)
   372                                                   for epoch in range(2):
   373                                                       for i, data in enumerate(train_loader):
   374                                                           print("Epoch: {} Batch: {} ".format(epoch+1,i))

Total time: 68.4369 s
File: debug/old_train_set.py
Function: fetch_batch at line 376

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   376                                           @profile
   377                                           def fetch_batch(dset, batch_idxs):
   378        35         23.0      0.7      0.0      data = []
   379     17802      12558.0      0.7      0.0      for idx in batch_idxs:
   380     17768   68424308.0   3851.0    100.0          data.append(dset[idx])
   381        34          9.0      0.3      0.0      return data

